<launch>
    <!-- setpoint ctrl -->
    <arg name="num_drone" default="1"/>
	<arg name="detecting_range" default="1.5"/>

	<arg name="user_hostname" default="brontes"/>
	<arg name="user_ip" default="192.168.0.7"/>
	<arg name="user_name" default="heromin"/>
	<arg name="user_password" default="eh2xhtm!88"/>
	<arg name="user_envloader" default="~/catkin_ws/devel/env.sh"/>
	<!-- <arg name="user_hostname" default="command"/>
	<arg name="user_ip" default="192.168.0.8"/>
	<arg name="user_name" default="kdh"/>
	<arg name="user_password" default="wkfk"/>
	<arg name="user_envloader" default="~/catkin_ws/devel/env.sh"/> -->

	<arg name="multi_user_hostname" default="banshee2"/>
	<arg name="multi_user_ip" default="192.168.0.32"/>
	<arg name="multi_user_name" default="odroid"/>
	<arg name="multi_user_password" default="icsl5293"/>
	<arg name="multi_user_envloader" default="~/catkin_ws/devel/env.sh"/>

	<machine name="$(arg multi_user_hostname)" address="$(arg multi_user_ip)" user="$(arg multi_user_name)" password="$(arg multi_user_password)" env-loader="$(arg multi_user_envloader)" default="true" />		
	<machine name="$(arg user_hostname)" address="$(arg user_ip)" user="$(arg user_name)" password="$(arg user_password)" env-loader="$(arg user_envloader)" default="true" />	
	<!-- UAV1 -->
	<group ns="camila1">
		<!-- MAVROS and vehicle configs -->
		<arg name="ID" value="1"/>
		<!--udp://:"remote port"@$(arg user_ip):"udp port" -->
		<!-- <arg name="fcu_url" default="udp://:14540@localhost:14557"/> -->
		<arg name="fcu_url" default="/dev/ttyUSB1:921600"/>
		<!-- <arg name="gcs_url" default="udp://:14540@$(arg user_ip):13301"/> -->
		
		<!-- MAVROS -->
		<node machine="$(arg multi_user_hostname)" pkg="mavros" type="mavros_node" name="mavros" output="screen" respawn="true">
			<param name="fcu_url" value="$(arg fcu_url)"/>
			<param name="gcs_url" value=""/>
			<param name="target_system_id" value="$(arg ID)"/>
			<param name="target_component_id" value="1" />
			<param name="fcu_protocol" value="v2.0" />
			<!-- load blacklist, config -->
			<rosparam command="load" file="$(find mavros)/launch/px4_pluginlists.yaml"/>
			<rosparam command="load" file="$(find mavros)/launch/px4_config.yaml" />
		</node>
	</group>

	<arg name="swarm_config_yaml" default="$(find swarm_ctrl_pkg)/config/swarm-configs/config.yaml" />
	<node name="swarm_node" pkg="swarm_ctrl_pkg" type="swarm_node" output="screen" respawn="true">
		<rosparam command="load" file="$(arg swarm_config_yaml)"/>
		<param name="num_drone" value="$(arg num_drone)"/>
	</node>

    <node machine="$(arg multi_user_hostname)" name="rplidarNode" pkg="rplidar_ros" type="rplidarNode" output="screen">
        <param name="serial_port" type="string" value="/dev/ttyUSB0"/>
        <param name="serial_baudrate" type="int" value="115200"/>
        <param name="frame_id" type="string" value="laser"/>
        <param name="inverted" type="bool" value="false"/>
        <param name="angle_compensate" type="bool" value="true"/>
    </node>
    <arg name="obstacle_detect_config_yaml" default="$(find obstacle_detect)/config/config.yaml" />
    <node machine="$(arg multi_user_hostname)" pkg="obstacle_detect" type="obstacle_detect_node" name="obstacle_detect_node" output="screen" respawn="true">
        <rosparam command="load" file="$(arg obstacle_detect_config_yaml)"/>
		<param name="detecting_range" value="$(arg detecting_range)"/>
    </node>
	<!-- <node name="mission_node" pkg="swarm_ctrl_pkg" type="mission_node" output="screen" respawn="true">
	</node> -->

</launch>